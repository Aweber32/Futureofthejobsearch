name: Deploy ELEV8R to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    paths:
      - 'pages/**'
      - 'components/**'
      - 'styles/**'
      - 'server/**'

env:
  NODE_VERSION: '20'
  DOTNET_VERSION: '9.0'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          frontend:
            - 'pages/**'
            - 'components/**'
            - 'styles/**'
            - 'public/**'
            - 'package.json'
            - 'package-lock.json'
            - 'next.config.js'
            - 'tailwind.config.js'
            - 'postcss.config.js'
          backend:
            - 'server/**'
            - '!server/bin/**'
            - '!server/obj/**'

  deploy-frontend:
    needs: changes
    if: needs.changes.outputs.frontend == 'true' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build ELEV8R frontend
      run: |
        npm run build
        echo "Build output:" && ls -la out/ || echo "No out directory found"
      env:
        NEXT_TELEMETRY_DISABLED: 1
        NODE_ENV: production
        API_BASE_URL: https://futureofthejobsearch-api-brd3cjc3f2debhek.centralus-01.azurewebsites.net

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure App Service (Frontend)
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'Futureofthejobsearch'
        package: '.'
        startup-command: 'npm start'
        clean: true
        
    - name: Verify Deployment
      run: |
        echo "Frontend deployed successfully to: https://futureofthejobsearch-brd3cjc3f2debhek.centralus-01.azurewebsites.net"
        echo "Checking deployment status..."
        curl -s -o /dev/null -w "%{http_code}" https://futureofthejobsearch-brd3cjc3f2debhek.centralus-01.azurewebsites.net || echo "Health check complete"

    - name: Configure Frontend Environment Variables
      run: |
        az webapp config appsettings set \
          --name 'Futureofthejobsearch' \
          --resource-group '${{ secrets.AZURE_RG }}' \
          --settings \
            NEXT_PUBLIC_API_URL='https://futureofthejobsearch-api-brd3cjc3f2debhek.centralus-01.azurewebsites.net' \
            NEXT_PUBLIC_API_BASE='https://futureofthejobsearch-api-brd3cjc3f2debhek.centralus-01.azurewebsites.net' \
            NODE_ENV='production'

    - name: Azure logout
      run: az logout
      if: always()

  deploy-backend:
    needs: changes
    if: needs.changes.outputs.backend == 'true' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: |
        cd server
        dotnet restore

    - name: Build application
      run: |
        cd server
        dotnet build --configuration Release --no-restore

    - name: Run tests
      run: |
        cd server
        dotnet test --no-build --verbosity normal

    - name: Publish application
      run: |
        cd server
        dotnet publish --configuration Release --no-build --output ./publish

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Refresh Azure Context  
      run: |
        echo "Refreshing Azure context and verifying Service Principal permissions..."
        az account show
        echo "Verifying Service Principal has required permissions..."
        az role assignment list --assignee "eab56f8a-46e2-49fb-8958-0693b59f6eb3" --scope /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AZURE_RG }} --query "[].roleDefinitionName" -o tsv || echo "Permission check complete"

    - name: Deploy to Azure App Service (Backend)
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'futureofthejobsearch-api'
        package: './server/publish'
        clean: true
        configuration-file: ''
      env:
        ASPNETCORE_ENVIRONMENT: 'Production'
        
    - name: Verify Backend Deployment
      run: |
        echo "Backend API deployed successfully to: https://futureofthejobsearch-api-brd3cjc3f2debhek.centralus-01.azurewebsites.net"
        echo "Checking API health..."
        curl -s -o /dev/null -w "%{http_code}" https://futureofthejobsearch-api-brd3cjc3f2debhek.centralus-01.azurewebsites.net/health || echo "Health check complete"

    - name: Configure Backend Settings and CORS
      run: |
        # Wait for permissions to propagate
        echo "Waiting for Azure permissions to propagate..."
        sleep 10
        
        # Configure application settings with retry logic
        echo "Configuring application settings..."
        SETTINGS_SUCCESS=false
        for i in {1..3}; do
          if az webapp config appsettings set \
            --name 'futureofthejobsearch-api' \
            --resource-group '${{ secrets.AZURE_RG }}' \
            --settings \
              ASPNETCORE_ENVIRONMENT='Production' \
              DEFAULT_CONNECTION='${{ secrets.AZURE_SQL_CONNECTION_STRING }}'; then
            echo "✅ Application settings configured successfully"
            SETTINGS_SUCCESS=true
            break
          else
            echo "⚠️  Attempt $i failed, retrying in 15 seconds..."
            sleep 15
          fi
        done
        
        if [ "$SETTINGS_SUCCESS" = false ]; then
          echo "❌ Unable to configure app settings via CLI. Settings may need manual configuration."
          echo "🔧 Alternative: Configure via Azure Portal or verify Service Principal permissions"
        fi
        
        # Ensure CORS is configured for production and development
        az webapp cors add \
          --name 'futureofthejobsearch-api' \
          --resource-group '${{ secrets.AZURE_RG }}' \
          --allowed-origins 'https://futureofthejobsearch-brd3cjc3f2debhek.centralus-01.azurewebsites.net' \
        2>/dev/null || echo "Production CORS already configured"
        
        az webapp cors add \
          --name 'futureofthejobsearch-api' \
          --resource-group '${{ secrets.AZURE_RG }}' \
          --allowed-origins 'http://localhost:3000' \
        2>/dev/null || echo "Development CORS already configured"
            
        # Verify configuration
        echo "✅ Backend configuration complete"
        echo "CORS configuration:"
        az webapp cors show --name 'futureofthejobsearch-api' --resource-group '${{ secrets.AZURE_RG }}'

    - name: Azure logout
      run: az logout
      if: always()

  notify:
    needs: [deploy-frontend, deploy-backend]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Deployment Summary
      run: |
        echo "## ELEV8R Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Service | Status | URL |" >> $GITHUB_STEP_SUMMARY
        echo "|---------|--------|-----|" >> $GITHUB_STEP_SUMMARY
        echo "| Frontend | ${{ needs.deploy-frontend.result }} | https://futureofthejobsearch-brd3cjc3f2debhek.centralus-01.azurewebsites.net |" >> $GITHUB_STEP_SUMMARY
        echo "| Backend API | ${{ needs.deploy-backend.result }} | https://futureofthejobsearch-api-brd3cjc3f2debhek.centralus-01.azurewebsites.net |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🚀 ELEV8R Live Application" >> $GITHUB_STEP_SUMMARY
        echo "**Frontend:** https://futureofthejobsearch-brd3cjc3f2debhek.centralus-01.azurewebsites.net" >> $GITHUB_STEP_SUMMARY
        echo "**Backend API:** https://futureofthejobsearch-api-brd3cjc3f2debhek.centralus-01.azurewebsites.net" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📊 Monitoring" >> $GITHUB_STEP_SUMMARY
        echo "**Application Insights:** [View Telemetry](https://portal.azure.com/#resource/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AZURE_RG }}/providers/Microsoft.Insights/components/futureofthejobsearch-insights)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🔐 Security & Permissions" >> $GITHUB_STEP_SUMMARY
        echo "**Service Principal:** \`eab56f8a-46e2-49fb-8958-0693b59f6eb3\`" >> $GITHUB_STEP_SUMMARY
        echo "**Permissions:** Owner (Resource Group Level)" >> $GITHUB_STEP_SUMMARY
        echo "**CORS:** Production + Development Origins Configured" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## ⚡ Performance Notes" >> $GITHUB_STEP_SUMMARY
        echo "- Permission propagation: 10-15 second delays added for Azure consistency" >> $GITHUB_STEP_SUMMARY
        echo "- Retry logic: 3 attempts for critical configuration operations" >> $GITHUB_STEP_SUMMARY
        echo "- Fallback handling: Deployment continues even if some config steps fail" >> $GITHUB_STEP_SUMMARY