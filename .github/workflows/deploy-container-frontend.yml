name: Build & Deploy Frontend Container to ACR

# Trigger rebuild with production API URLs
on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: futureofthejobsearch-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Set production environment variables
      run: |
        echo "NEXT_PUBLIC_API_URL=https://futureofthejobsearch-api-brd3cjc3f2debhek.centralus-01.azurewebsites.net" >> $GITHUB_ENV
        echo "NEXT_PUBLIC_API_BASE=https://futureofthejobsearch-api-brd3cjc3f2debhek.centralus-01.azurewebsites.net" >> $GITHUB_ENV

    - name: Verify environment variables
      run: |
        echo "Environment variables set:"
        echo "NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL"
        echo "NEXT_PUBLIC_API_BASE=$NEXT_PUBLIC_API_BASE"

    - name: Build Next.js standalone
      run: |
        echo "Building with environment variables:"
        echo "NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL"
        echo "NEXT_PUBLIC_API_BASE=$NEXT_PUBLIC_API_BASE"
        npm run build

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to ACR
      run: az acr login --name ${{ secrets.ACR_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile.frontend
        push: true
        tags: ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Update App Service to use new image
      run: |
        az webapp config container set --name ${{ secrets.FRONTEND_APP_NAME }} --resource-group ${{ secrets.AZURE_RG }} --docker-custom-image-name ${{ secrets.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Configure App Service port and verify image
      run: |
        az webapp config appsettings set --name ${{ secrets.FRONTEND_APP_NAME }} --resource-group ${{ secrets.AZURE_RG }} --settings WEBSITES_PORT=8080 PORT=8080
        echo "Configured WEBSITES_PORT=8080 and PORT=8080"
        echo "Configured image:"
        az webapp show --name ${{ secrets.FRONTEND_APP_NAME }} --resource-group ${{ secrets.AZURE_RG }} --query "siteConfig.linuxFxVersion" -o tsv

    - name: Restart App Service
      run: |
        az webapp restart --name ${{ secrets.FRONTEND_APP_NAME }} --resource-group ${{ secrets.AZURE_RG }}
